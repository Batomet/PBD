CREATE TABLE PROJECTS 
( 
PROJECT_ID INTEGER CONSTRAINT PROJECT_PK PRIMARY KEY, PROJECT_DESC VARCHAR(20) NOT NULL CONSTRAINT PROJECT_UK UNIQUE, START_DATE DATE DEFAULT SYSDATE, END_DATE DATE, 
 CONSTRAINT PROJECT_DATE_CHK CHECK (END_DATE>START_DATE), FUND NUMBER(7,2) CONSTRAINT PROJECT_FUND_CHK CHECK (FUND>=0) 
); 
CREATE TABLE ASSIGNMENTS 
( 
 PROJECT_ID INTEGER, CONSTRAINT ASSIGNMENTS_FK_01 FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID), EMPLOYEE_ID INTEGER , CONSTRAINT ASSIGNMENTS_FK_02 FOREIGN KEY (EMPLOYEE_ID) 
REFERENCES EMPLOYEES(EMPLOYEE_ID), 
 START_DATE DATE DEFAULT SYSDATE, 
 END_DATE DATE, CONSTRAINT ASSIGNMENTS_DATE_CHK CHECK (END_DATE>START_DATE), SALARY NUMBER(7,2) CONSTRAINT ASSIGNMENTS_SALARY_CHK CHECK (SALARY>0), 
 JOB_TITLE VARCHAR(20) CONSTRAINT ASSIGNMENTS_JOB_TITLE_CHK CHECK (JOB_TITLE IN ('MANAGER', 'ANALYST', 'PROGRAMMER')), CONSTRAINT ASSIGNMENTS_PK PRIMARY KEY (PROJECT_ID, EMPLOYEE_ID) 
); 

ALTER TABLE ASSIGNMENTS ADD(TIME NUMBER(4,0)); 

COMMENT ON TABLE PROJECTS IS 'Lista projektów prowadzonych przez pracowników'; 
COMMENT ON TABLE ASSIGNMENTS IS 'Informacje o przydziale poszczególnych pracowników do 
projektów'; 
SELECT * from all_tab_comments WHERE TABLE_NAME LIKE 'PROJECTS' OR TABLE_NAME LIKE 
'ASSIGNMENTS' 

select * from all_constraints WHERE TABLE_NAME LIKE 'ASSIGNMENTS' 

ALTER TABLE PROJECTS DISABLE CONSTRAINT PROJECT_UK; 

ALTER TABLE PROJECTS MODIFY PROJECT_DESC CHARACTER VARYING (30); 

CREATE TABLE EMPLOYEE_DEPARTMENTS (LAST_NAME, JOB_TITLE, ANNUAL_SALARY, DEPARTMENT_NAME, LOCATION_ID) AS SELECT LAST_NAME, JOB_TITLE, SALARY*12, DEPARTMENT_NAME, LOCATION_ID 
FROM EMPLOYEES NATURAL JOIN DEPARTMENTS NATURAL JOIN JOBS; 

ALTER TABLE PROJECTS ENABLE CONSTRAINT PROJECT_UK; 
 
INSERT INTO PROJECTS 
(PROJECT_ID, PROJECT_DESC, START_DATE, END_DATE, FUND) 
VALUES 
(1,'Bitmap indexes', (TO_DATE('1999/04/02', 'yyyy/mm/dd')), (TO_DATE('2001/08/31', 
'yyyy/mm/dd')), 25000); 
INSERT INTO PROJECTS 
(PROJECT_ID, PROJECT_DESC, START_DATE, FUND) 
VALUES 
(2,'Neutral networks', (TO_DATE('2000/11/12', 'yyyy/mm/dd')), 19000); 
 
INSERT INTO ASSIGNMENTS 
(PROJECT_ID, EMPLOYEE_ID, START_DATE, END_DATE, SALARY, JOB_TITLE, TIME) 
VALUES 
(1,170, (TO_DATE('1999/04/10', 'yyyy/mm/dd')), (TO_DATE('1999/05/10', 'yyyy/mm/dd')), 1000, 
'MANAGER', 20); 
 
INSERT INTO ASSIGNMENTS 
(PROJECT_ID, EMPLOYEE_ID, START_DATE, SALARY, JOB_TITLE, TIME) 
VALUES 
(1,140, (TO_DATE('2000/12/01', 'yyyy/mm/dd')), 1500, 'ANALYST', 40); 

UPDATE ASSIGNMENTS SET SALARY = 1200 WHERE EMPLOYEE_ID = 180; 

UPDATE PROJECTS SET END_DATE = (TO_DATE('2001/12/31', 'yyyy/mm/dd')), FUND = 19000 WHERE 
PROJECT_DESC = 'Bitmap indexes'; 

INSERT INTO PROJECTS 
(PROJECT_ID, PROJECT_DESC, START_DATE, END_DATE, FUND) 
VALUES 
(3,'WebDev', (TO_DATE('2005/02/01', 'yyyy/mm/dd')), (TO_DATE('2010/08/31', 'yyyy/mm/dd')), 
20000); 
INSERT INTO PROJECTS 
(PROJECT_ID, PROJECT_DESC, START_DATE, END_DATE, FUND) 
VALUES 
(4,'Create App', (TO_DATE('2003/01/02', 'yyyy/mm/dd')), (TO_DATE('2005/02/12', 'yyyy/mm/dd')), 
33000); 

 
UPDATE EMPLOYEES e1 SET 
e1.SALARY = SALARY+(SELECT (0.10*AVG(SALARY)) FROM EMPLOYEES e2 WHERE 
e2.DEPARTMENT_ID = e1.DEPARTMENT_ID) 
WHERE e1.DEPARTMENT_ID IN (SELECT e2.DEPARTMENT_ID FROM EMPLOYEES e2 WHERE 
e2.DEPARTMENT_ID = e1.DEPARTMENT_ID); 

UPDATE EMPLOYEES 
SET SALARY=(SELECT AVG (SALARY) FROM EMPLOYEES) 
WHERE SALARY=(SELECT MIN(SALARY) FROM EMPLOYEES); 

UPDATE EMPLOYEES SET SALARY=(SELECT AVG(SALARY) FROM EMPLOYEES WHERE 
MANAGER_ID=(SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'SHELLEY' AND 
LAST_NAME = 'HIGGINS')) WHERE DEPARTMENT_ID = 20 
 
DELETE FROM PROJECTS p WHERE NOT EXISTS (SELECT EMPLOYEE_ID FROM ASSIGNMENTS a WHERE 
P.PROJECT_ID=a.PROJECT_ID); 

DELETE FROM EMPLOYEES WHERE MANAGER_ID=(SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE 
LAST_NAME = 'WDEHAAN') 
 
DROP TABLE IF EXISTS JOBS_MK_REP; 
CREATE TABLE JOBS_MK_REP 
AS (SELECT * FROM JOBS WHERE JOB_TITLE = 'Marketing Representative') 

UPDATE EMPLOYEES SET SALARY = (SELECT (nvl(AVG(SALARY), 0)*1.2) FROM EMPLOYEES WHERE 
MANAGER_ID=(SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'James' AND 
LAST_NAME = 'Landry')) WHERE TO_DATE(HIRE_DATE, 'YYYY') > 1990 